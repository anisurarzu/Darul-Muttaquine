import React, { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { useHistory } from "react-router-dom"; // Use useHistory instead of useNavigate
import "./Slider.css";

// Image from the provided link
const scholarshipBg = "https://i.ibb.co.com/kgh5YjLz/IMG-7332.jpg";

const slides = [
  {
    title: "‡¶¶‡¶æ‡¶∞‡ßÅ‡¶≤ ‡¶Æ‡ßÅ‡¶§‡ßç‡¶§‡¶æ‡¶ï‡ßç‡¶¨‡ßÄ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡ß®‡ß¶‡ß®‡ß´",
    subtitle: "‡¶≠‡¶¨‡¶ø‡¶∑‡ßç‡¶Ø‡¶§‡ßá‡¶∞ ‡¶™‡¶•‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶π‡¶Ø‡ßã‡¶ó‡ßÄ",
    description: `
      üéì ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶ö‡¶≤‡¶õ‡ßá!
      ‚úÖ ‡¶Ü‡¶¨‡ßá‡¶¶‡¶®‡ßá‡¶∞ ‡¶∂‡ßá‡¶∑ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ‡ßß‡ß´ ‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤, ‡ß®‡ß¶‡ß®‡ß´
    `,
  },
  {
    title: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ",
    subtitle: "‡¶¶‡¶æ‡¶∞‡ßÅ‡¶≤ ‡¶Æ‡ßÅ‡¶§‡ßç‡¶§‡¶æ‡¶ï‡ßç‡¶¨‡ßÄ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá",
    description: `
      üíµ ‡¶®‡¶ó‡¶¶ ‡¶Ö‡¶∞‡ßç‡¶• ‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞
      üéÅ ‡¶ó‡¶ø‡¶´‡¶ü ‡¶π‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡¶æ‡¶∞
      üìú ‡¶∏‡¶®‡¶¶‡¶™‡¶§‡ßç‡¶∞
      üñ•Ô∏è ‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡ßÄ‡¶Ø‡¶º ‡¶ï‡ßã‡¶∞‡ßç‡¶∏
    `,
  },
  {
    title: "‡¶¶‡¶æ‡¶∞‡ßÅ‡¶≤ ‡¶Æ‡ßÅ‡¶§‡ßç‡¶§‡¶æ‡¶ï‡ßç‡¶¨‡ßÄ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡ß®‡ß¶‡ß®‡ß´",
    subtitle: "‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶è‡¶ñ‡¶®‡¶á!",
    description: `
      üåü ‡¶¶‡ßá‡¶∞‡¶ø ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá ‡¶Ü‡¶ú‡¶á ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
      üìû ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó: ‡ß¶‡ßß‡ß≠‡ßØ‡ßß‡ß´‡ß´‡ß¨‡ßß‡ßÆ‡ß™
    `,
  },
];

export default function Slider() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const history = useHistory(); // Use useHistory for navigation

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % slides.length);
    }, 5000);
    return () => clearInterval(interval);
  }, []);

  // Function to handle button click
  const handleApplyNow = () => {
    history.push("/scholarship-public"); // Use history.push for navigation
  };

  return (
    <div className="relative overflow-hidden h-[350px] lg:h-[500px] xl:h-[500px] slider-container">
      {/* Vintage-style dark overlay */}
      <div className="absolute inset-0 bg-black bg-opacity-70"></div>

      {/* Background Image with vintage effect */}
      <div
        className="absolute inset-0 bg-cover bg-center"
        style={{
          filter: "blur(3px) grayscale(30%) brightness(70%)",
          backgroundImage: `url(${scholarshipBg})`,
        }}></div>

      {/* Text Content */}
      <div className="absolute inset-0 flex flex-col justify-center items-center text-white z-10">
        <AnimatePresence mode="wait">
          <motion.h1
            key={`title-${currentSlide}`}
            className="text-[30px] lg:text-[45px] xl:text-[45px] text-center font-bold drop-shadow-lg bangla-text"
            initial={{ opacity: 0, y: -30 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 30 }}
            transition={{ duration: 0.8 }}>
            {slides[currentSlide].title}
          </motion.h1>
        </AnimatePresence>

        <AnimatePresence mode="wait">
          <motion.h2
            key={`subtitle-${currentSlide}`}
            className="text-[22px] lg:text-[30px] xl:text-[30px] text-center font-semibold mt-2 bangla-text"
            initial={{ opacity: 0, y: -30 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 30 }}
            transition={{ duration: 0.8, delay: 0.2 }}>
            {slides[currentSlide].subtitle}
          </motion.h2>
        </AnimatePresence>

        <AnimatePresence mode="wait">
          <motion.p
            key={`description-${currentSlide}`}
            className="text-[18px] lg:text-[24px] xl:text-[24px] text-center mt-4 bangla-text px-4 lg:px-40 whitespace-pre-line"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -30 }}
            transition={{ duration: 0.8, delay: 0.4 }}>
            {slides[currentSlide].description}
          </motion.p>
        </AnimatePresence>

        {/* Apply Now Button */}
        <motion.button
          onClick={handleApplyNow}
          className="mt-6 bg-green-600 hover:bg-green-700 text-white font-semibold py-4 px-10 rounded-lg shadow-lg transition-all duration-300 text-[20px]"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.6 }}>
          ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®
        </motion.button>
      </div>
    </div>
  );
}
