import React, { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { useHistory } from "react-router-dom";
import "./Slider.css";

const scholarshipBg = "https://i.ibb.co.com/kgh5YjLz/IMG-7332.jpg";

const slides = [
  {
    title: "‡¶¶‡¶æ‡¶∞‡ßÅ‡¶≤ ‡¶Æ‡ßÅ‡¶§‡ßç‡¶§‡¶æ‡¶ï‡ßç‡¶¨‡ßÄ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡ß®‡ß¶‡ß®‡ß´",
    subtitle: "‡¶Ü‡¶¨‡ßá‡¶¶‡¶®‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßü ‡¶∂‡ßá‡¶∑ ‡¶π‡ßü‡ßá‡¶õ‡ßá",
    description: `
      üéì ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶Ü‡¶¨‡ßá‡¶¶‡¶® ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶¨‡¶®‡ßç‡¶ß
      ‚úÖ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ‡ß®‡ß´ ‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤, ‡ß®‡ß¶‡ß®‡ß´
      
      ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ (‡ß©‡ßü-‡ß´‡¶Æ) ‚úÖ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü: ‡ß™‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‚úÖ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶∏‡¶ï‡¶æ‡¶≤ ‡ßØ:‡ß¶‡ß¶ ‡¶ü‡¶æ‡ßü ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶¨‡ßá (‡¶á‡¶® ‡¶∂‡¶æ ‡¶Ü‡¶≤‡ßç‡¶≤‡¶π)
      
      ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ (‡ß¨‡¶∑‡ßç‡¶†-‡ßß‡ß¶‡¶Æ) ‚úÖ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü: ‡ß≠‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‚úÖ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ ‡¶∏‡¶ï‡¶æ‡¶≤ ‡ßß‡ß¶:‡ß®‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶¨‡ßá (‡¶á‡¶® ‡¶∂‡¶æ ‡¶Ü‡¶≤‡ßç‡¶≤‡¶π)
      
      ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶ï‡ßá‡¶®‡ßç‡¶¶‡ßç‡¶∞: ‡¶§‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶ö‡¶æ‡¶≤‡¶æ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶π‡¶æ‡¶á ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤, ‡¶§‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶ö‡¶æ‡¶≤‡¶æ,‡¶∏‡¶ñ‡¶ø‡¶™‡ßÅ‡¶∞, ‡¶ü‡¶æ‡¶ô‡ßç‡¶ó‡¶æ‡¶á‡¶≤
    `,
  },
  {
    title: "‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡¶∏‡ßÅ‡¶¨‡¶ø‡¶ß‡¶æ",
    subtitle: "‡¶¶‡¶æ‡¶∞‡ßÅ‡¶≤ ‡¶Æ‡ßÅ‡¶§‡ßç‡¶§‡¶æ‡¶ï‡ßç‡¶¨‡ßÄ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá",
    description: `
      üíµ ‡¶®‡¶ó‡¶¶ ‡¶Ö‡¶∞‡ßç‡¶• ‡¶™‡ßÅ‡¶∞‡¶∏‡ßç‡¶ï‡¶æ‡¶∞
      üéÅ ‡¶ó‡¶ø‡¶´‡¶ü ‡¶π‡ßç‡¶Ø‡¶æ‡¶Æ‡ßç‡¶™‡¶æ‡¶∞
      üìú ‡¶∏‡¶®‡¶¶‡¶™‡¶§‡ßç‡¶∞
      üñ•Ô∏è ‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶®‡ßÄ‡¶Ø‡¶º ‡¶ï‡ßã‡¶∞‡ßç‡¶∏
      
      ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ‡ß®‡ß´ ‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤, ‡ß®‡ß¶‡ß®‡ß´
      ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶ï‡ßá‡¶®‡ßç‡¶¶‡ßç‡¶∞: ‡¶§‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶ö‡¶æ‡¶≤‡¶æ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶π‡¶æ‡¶á ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤, ‡¶§‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶ö‡¶æ‡¶≤‡¶æ,‡¶∏‡¶ñ‡¶ø‡¶™‡ßÅ‡¶∞, ‡¶ü‡¶æ‡¶ô‡ßç‡¶ó‡¶æ‡¶á‡¶≤
    `,
  },
  {
    title: "‡¶¶‡¶æ‡¶∞‡ßÅ‡¶≤ ‡¶Æ‡ßÅ‡¶§‡ßç‡¶§‡¶æ‡¶ï‡ßç‡¶¨‡ßÄ‡¶® ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶¨‡ßÉ‡¶§‡ßç‡¶§‡¶ø ‡ß®‡ß¶‡ß®‡ß´",
    subtitle: "‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶∏‡ßç‡¶§‡ßÅ‡¶§‡¶ø ‡¶®‡¶ø‡¶®",
    description: `
      üìÖ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ‡ß®‡ß´ ‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤, ‡ß®‡ß¶‡ß®‡ß´
      üè´ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶ï‡ßá‡¶®‡ßç‡¶¶‡ßç‡¶∞: ‡¶§‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶ö‡¶æ‡¶≤‡¶æ ‡¶∏‡¶¨‡ßÅ‡¶ú ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶π‡¶æ‡¶á ‡¶∏‡ßç‡¶ï‡ßÅ‡¶≤, ‡¶§‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶ö‡¶æ‡¶≤‡¶æ,‡¶∏‡¶ñ‡¶ø‡¶™‡ßÅ‡¶∞, ‡¶ü‡¶æ‡¶ô‡ßç‡¶ó‡¶æ‡¶á‡¶≤
      
      ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ (‡ß©‡ßü-‡ß´‡¶Æ) ‚úÖ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü: ‡ß™‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‚úÖ ‡¶∏‡¶ï‡¶æ‡¶≤ ‡ßØ:‡ß¶‡ß¶ ‡¶ü‡¶æ‡ßü
      ‡¶ï‡ßç‡¶≤‡¶æ‡¶∏ (‡ß¨‡¶∑‡ßç‡¶†-‡ßß‡ß¶‡¶Æ) ‚úÖ ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü: ‡ß≠‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü ‚úÖ ‡¶∏‡¶ï‡¶æ‡¶≤ ‡ßß‡ß¶:‡ß®‡ß¶ ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü‡ßá
      
      üìû ‡¶Ø‡ßã‡¶ó‡¶æ‡¶Ø‡ßã‡¶ó: ‡ß¶‡ßß‡ß≠‡ßØ‡ßß‡ß´‡ß´‡ß¨‡ßß‡ßÆ‡ß™
    `,
  },
];

export default function Slider() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const history = useHistory();
  const applicationClosed = true; // Set to true as application time is over

  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % slides.length);
    }, 5000);
    return () => clearInterval(interval);
  }, []);

  const handleInfoClick = () => {
    history.push("/scholarship-info"); // Redirect to information page
  };

  return (
    <div className="relative overflow-hidden h-[400px] lg:h-[550px] xl:h-[550px] slider-container">
      {/* Vintage-style dark overlay */}
      <div className="absolute inset-0 bg-black bg-opacity-70"></div>

      {/* Background Image with vintage effect */}
      <div
        className="absolute inset-0 bg-cover bg-center"
        style={{
          filter: "blur(3px) grayscale(30%) brightness(70%)",
          backgroundImage: `url(${scholarshipBg})`,
        }}></div>

      {/* Text Content */}
      <div className="absolute inset-0 flex flex-col justify-center items-center text-white z-10 px-4">
        <AnimatePresence mode="wait">
          <motion.h1
            key={`title-${currentSlide}`}
            className="text-[30px] lg:text-[45px] xl:text-[45px] text-center font-bold drop-shadow-lg bangla-text"
            initial={{ opacity: 0, y: -30 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 30 }}
            transition={{ duration: 0.8 }}>
            {slides[currentSlide].title}
          </motion.h1>
        </AnimatePresence>

        <AnimatePresence mode="wait">
          <motion.h2
            key={`subtitle-${currentSlide}`}
            className="text-[22px] lg:text-[30px] xl:text-[30px] text-center font-semibold mt-2 bangla-text"
            initial={{ opacity: 0, y: -30 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: 30 }}
            transition={{ duration: 0.8, delay: 0.2 }}>
            {slides[currentSlide].subtitle}
          </motion.h2>
        </AnimatePresence>

        <AnimatePresence mode="wait">
          <motion.div
            key={`description-${currentSlide}`}
            className="text-[16px] lg:text-[20px] xl:text-[20px] text-center mt-4 bangla-text px-2 lg:px-20 whitespace-pre-line"
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -30 }}
            transition={{ duration: 0.8, delay: 0.4 }}>
            {slides[currentSlide].description}
          </motion.div>
        </AnimatePresence>

        {/* Changed button to show information instead of apply now */}
        <motion.button
          onClick={handleInfoClick}
          className="mt-6 bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-8 rounded-lg shadow-lg transition-all duration-300 text-[18px]"
          initial={{ opacity: 0, y: 30 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8, delay: 0.6 }}>
          ‡¶¨‡¶ø‡¶∏‡ßç‡¶§‡¶æ‡¶∞‡¶ø‡¶§ ‡¶§‡¶•‡ßç‡¶Ø
        </motion.button>
      </div>
    </div>
  );
}
