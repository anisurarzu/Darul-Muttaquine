import React, { useState, useRef } from "react";
import axios from "axios";
import { toast } from "react-toastify";
import {
  Button,
  Card,
  Divider,
  Table,
  Typography,
  Input,
  Form,
  Row,
  Col,
} from "antd";
import { DownloadOutlined, SearchOutlined } from "@ant-design/icons";
import { coreAxios } from "../../../utilities/axios";
import html2canvas from "html2canvas";
import jsPDF from "jspdf";

const { Text, Title } = Typography;

// Function to convert numbers to Bengali numerals
const convertToBengali = (number) => {
  const bengaliNumerals = ["рзж", "рзз", "рзи", "рзй", "рзк", "рзл", "рзм", "рзн", "рзо", "рзп"];
  return String(number).replace(/\d/g, (digit) => bengaliNumerals[digit]);
};

const ResultPage = () => {
  const [resultData, setResultData] = useState({});
  const [loading, setLoading] = useState(false);
  const resultCardRef = useRef(null);
  const [form] = Form.useForm();

  const onFinish = async (values) => {
    try {
      setLoading(true);
      const res = await coreAxios.get(
        `search-result/${values?.scholarshipRollNumber}`
      );
      if (res?.status === 200) {
        setLoading(false);
        toast.success("Result fetched successfully");
        form.resetFields();
        setResultData(res?.data);
      }
    } catch (err) {
      setLoading(false);
      toast.error(err?.response?.data?.message || "Error fetching result");
    }
  };

  // Scholarship condition and message
  const getScholarshipStatus = () => {
    const totalMarks = resultData?.resultDetails?.[0]?.totalMarks || 0;
    const classNumber = parseInt(resultData?.instituteClass) || 0;

    // For classes 3 to 5
    if (classNumber >= 3 && classNumber <= 5) {
      if (totalMarks >= 45 && totalMarks <= 48) {
        return { status: "General Grade", prize: false, scholarship: true };
      } else if (totalMarks >= 49 && totalMarks <= 50) {
        return { status: "Talentpool Grade", prize: false, scholarship: true };
      } else if (totalMarks >= 40 && totalMarks <= 44) {
        return { status: "Special Category", prize: true, scholarship: false };
      }
    }
    // For classes 6 to 8
    else if (classNumber >= 6 && classNumber <= 8) {
      if (totalMarks >= 75 && totalMarks < 85) {
        return { status: "General Grade", prize: false, scholarship: true };
      } else if (totalMarks >= 85 && totalMarks <= 100) {
        return { status: "Talentpool Grade", prize: false, scholarship: true };
      } else if (totalMarks >= 65 && totalMarks < 75) {
        return { status: "Special Category", prize: true, scholarship: false };
      }
    }
    // For classes 9 to 10
    else if (classNumber >= 9 && classNumber <= 10) {
      if (totalMarks >= 75 && totalMarks < 85) {
        return { status: "General Grade", prize: false, scholarship: true };
      } else if (totalMarks >= 85 && totalMarks <= 100) {
        return { status: "Talentpool Grade", prize: false, scholarship: true };
      } else if (totalMarks >= 70 && totalMarks < 75) {
        return { status: "Special Category", prize: true, scholarship: false };
      }
    }
    return { status: "Not Qualified", prize: false, scholarship: false };
  };

  // Download result as PDF
  const downloadResultAsPDF = () => {
    const input = resultCardRef.current;
    html2canvas(input).then((canvas) => {
      const imgData = canvas.toDataURL("image/png");
      const pdf = new jsPDF("p", "mm", "a4");
      const imgProps = pdf.getImageProperties(imgData);
      const pdfWidth = pdf.internal.pageSize.getWidth();
      const pdfHeight = (imgProps.height * pdfWidth) / imgProps.width;
      pdf.addImage(imgData, "PNG", 0, 0, pdfWidth, pdfHeight);
      pdf.save(`dmf-result-${resultData?.scholarshipRollNumber}.pdf`);
    });
  };

  // Table data
  const resultTableData = [
    { key: "1", label: "ржирж╛ржо", value: resultData?.name || "-" },
    {
      key: "2",
      label: "рж╢рж┐ржХрзНрж╖рж╛ ржкрзНрж░рждрж┐рж╖рзНржарж╛ржи",
      value: resultData?.institute || "-",
    },
    {
      key: "3",
      label: "рж╢рзНрж░рзЗржгрзА",
      value: convertToBengali(resultData?.instituteClass) || "-",
    },
    {
      key: "4",
      label: "рж░рзЛрж▓ ржиржорзНржмрж░",
      value:
        convertToBengali(
          resultData?.resultDetails?.[0]?.scholarshipRollNumber
        ) || "-",
    },
    {
      key: "5",
      label: "рж╕ржарж┐ржХ ржЙрждрзНрждрж░",
      value:
        convertToBengali(resultData?.resultDetails?.[0]?.totalCorrectAns) ||
        "-",
    },
    {
      key: "6",
      label: "ржнрзБрж▓ ржЙрждрзНрждрж░",
      value:
        convertToBengali(resultData?.resultDetails?.[0]?.totalWrongAns) || "-",
    },
    {
      key: "7",
      label: "ржкрзНрж░рж╛ржкрзНржд ржиржорзНржмрж░",
      value:
        convertToBengali(resultData?.resultDetails?.[0]?.totalMarks) || "-",
    },
    {
      key: "8",
      label: "рж╕рзНржЯрзНржпрж╛ржЯрж╛рж╕",
      value: getScholarshipStatus().prize
        ? "ржмрж┐рж╢рзЗрж╖ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐ (Special Category)"
        : getScholarshipStatus().status,
    },
  ];

  const columns = [
    {
      title: "ржмрж┐ржмрж░ржг",
      dataIndex: "label",
      key: "label",
      width: "40%",
      render: (text) => (
        <Text className="tt" style={{ fontSize: "16px" }}>
          {text}
        </Text>
      ),
    },
    {
      title: "ржлрж▓рж╛ржлрж▓",
      dataIndex: "value",
      key: "value",
      width: "60%",
      render: (text) => (
        <Text className="tt" style={{ fontSize: "16px" }}>
          {text}
        </Text>
      ),
    },
  ];

  // Scholarship criteria information
  const scholarshipCriteria = [
    {
      class: "рзйрзЯ-рзлржо рж╢рзНрж░рзЗржгрзА",
      general: "рзкрзл-рзкрзо ржиржорзНржмрж░",
      talentpool: "рзкрзп-рзлрзж ржиржорзНржмрж░",
      special: "рзкрзж-рзкрзк ржиржорзНржмрж░ (ржмрж┐рж╢рзЗрж╖ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐)",
    },
    {
      class: "рзмрж╖рзНржа-рзоржо рж╢рзНрж░рзЗржгрзА",
      general: "рзнрзл-рзорзк ржиржорзНржмрж░",
      talentpool: "рзорзл-рззрзжрзж ржиржорзНржмрж░",
      special: "рзмрзл-рзнрзк ржиржорзНржмрж░ (ржмрж┐рж╢рзЗрж╖ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐)",
    },
    {
      class: "рзпржо-рззрзжржо рж╢рзНрж░рзЗржгрзА",
      general: "рзнрзл-рзорзк ржиржорзНржмрж░",
      talentpool: "рзорзл-рззрзжрзж ржиржорзНржмрж░",
      special: "рзнрзж-рзнрзк ржиржорзНржмрж░ (ржмрж┐рж╢рзЗрж╖ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐)",
    },
  ];

  return (
    <div className="bg-gray-50 min-h-screen p-4 mx-0 xl:mx-24 ">
      {/* Header with white title */}
      <div className=" p-4 mb-6 rounded">
        <Title
          level={3}
          className="text-center text-white tt mb-0"
          style={{ fontSize: "24px" }}>
          ржжрж╛рж░рзБрж▓ ржорзБрждрзНрждрж╛ржХрзНржмрзАржи рж╢рж┐ржХрзНрж╖рж╛ржмрзГрждрзНрждрж┐ ржлрж▓рж╛ржлрж▓ рзирзжрзирзл
        </Title>
      </div>

      {/* Scholarship Criteria Card */}

      <Card className="mb-6">
        <Form form={form} onFinish={onFinish} layout="vertical">
          <Form.Item
            name="scholarshipRollNumber"
            label={
              <span className="tt" style={{ fontSize: "16px" }}>
                рж╢рж┐ржХрзНрж╖рж╛ржмрзГрждрзНрждрж┐ рж░рзЛрж▓ ржиржорзНржмрж░
              </span>
            }
            rules={[{ required: true, message: "рж░рзЛрж▓ ржиржорзНржмрж░ ржжрж┐ржи" }]}>
            <Input
              placeholder="рж░рзЛрж▓ ржиржорзНржмрж░ рж▓рж┐ржЦрзБржи"
              className="tt"
              size="large"
              style={{ fontSize: "16px" }}
            />
          </Form.Item>

          <Form.Item>
            <Button
              type="primary"
              htmlType="submit"
              icon={<SearchOutlined />}
              loading={loading}
              block
              style={{ height: "45px", fontSize: "16px" }}>
              ржлрж▓рж╛ржлрж▓ ржжрзЗржЦрзБржи
            </Button>
          </Form.Item>
        </Form>
      </Card>

      {Object.keys(resultData).length > 0 && (
        <Card>
          <div
            ref={resultCardRef}
            className="p-4 border border-gray-300 bg-white">
            {/* Header */}
            <div className="text-center mb-6">
              <Title level={4} className="tt mb-1" style={{ fontSize: "20px" }}>
                ржжрж╛рж░рзБрж▓ ржорзБрждрзНрждрж╛ржХрзНржмрзАржи ржлрж╛ржЙржирзНржбрзЗрж╢ржи
              </Title>
              <Text className="tt" style={{ fontSize: "16px" }}>
                рж╢рж┐ржХрзНрж╖рж╛ржмрзГрждрзНрждрж┐ ржкрж░рзАржХрзНрж╖рж╛ рзирзжрзирзл - ржлрж▓рж╛ржлрж▓
              </Text>
              <Divider className="my-3 bg-gray-300" />
            </div>

            {/* Result Table */}
            <Table
              columns={columns}
              dataSource={resultTableData}
              pagination={false}
              bordered
              size="small"
              className="mb-6"
            />

            {/* Islamic Messages based on scholarship status */}
            {getScholarshipStatus().scholarship ? (
              <div className="mb-4 p-3 bg-green-50 border-l-4 border-green-600">
                <Title
                  level={5}
                  className="tt text-green-800"
                  style={{ fontSize: "18px" }}>
                  <span className="text-xl">ЁЯОЙ</span> ржорж╛ржмрж░рзБржХ! ржЖржкржирж┐ рж╢рж┐ржХрзНрж╖рж╛ржмрзГрждрзНрждрж┐
                  ржкрзЗржпрж╝рзЗржЫрзЗржи
                </Title>
                <Text className="tt block" style={{ fontSize: "16px" }}>
                  <strong>ржХрзБрж░ржЖржирзБрж▓ ржХрж╛рж░рзАржо:</strong> "ржпрзЗ ржмрзНржпржХрзНрждрж┐ ржЖрж▓рзНрж▓рж╛рж╣ржХрзЗ ржнржпрж╝ ржХрж░рзЗ,
                  ржЖрж▓рзНрж▓рж╛рж╣ рждрж╛рж░ ржЬржирзНржп ржЙрждрзНрждрж░ржгрзЗрж░ ржкрже ржмрзЗрж░ ржХрж░рзЗ ржжрзЗржи ржПржмржВ рждрж╛ржХрзЗ рждрж╛рж░ ржзрж╛рж░ржгрж╛рждрзАржд
                  ржЬрж╛ржпрж╝ржЧрж╛ ржерзЗржХрзЗ рж░рж┐ржЬрж┐ржХ ржжрж╛ржи ржХрж░рзЗржиред" (рж╕рзВрж░рж╛ рждрж╛рж▓рж╛ржХ: рзи-рзй)
                </Text>
                <Text className="tt block mt-2" style={{ fontSize: "16px" }}>
                  <strong>рж╣рж╛ржжрзАрж╕:</strong> "ржпржЦржи ржЖрж▓рзНрж▓рж╛рж╣ рждрж╛ржЖрж▓рж╛ ржХрзЛржи ржмрж╛ржирзНржжрж╛рж░ ржХрж▓рзНржпрж╛ржг
                  ржЪрж╛ржи, рждржЦржи рждрж┐ржирж┐ рждрж╛ржХрзЗ ржжрзНржмрзАржирзЗрж░ ржмрзБржЭ ржжрж╛ржи ржХрж░рзЗржиред" (ржмрзБржЦрж╛рж░рзА, рж╣рж╛ржжрзАрж╕: рзнрзз)
                </Text>
                <Text className="tt block mt-2" style={{ fontSize: "16px" }}>
                  ржЖржкржирж╛рж░ ржПржЗ рж╕рж╛ржлрж▓рзНржп ржЖрж▓рзНрж▓рж╛рж╣рж░ ржмрж┐рж╢рзЗрж╖ рж░рж╣ржорждред ржПржЯрж╛ржХрзЗ ржХрзЗржмрж▓ржЗ ржжрзБржирж┐ржпрж╝рж╛ржмрзА
                  рж╕рж╛ржлрж▓рзНржп ржоржирзЗ ржирж╛ ржХрж░рзЗ ржЖржЦрж┐рж░рж╛рждрзЗрж░ рж╕рж╛ржлрж▓рзНржп ржЕрж░рзНржЬржирзЗрж░ ржорж╛ржзрзНржпржо рж╣рж┐рж╕рзЗржмрзЗ ржЧрзНрж░рж╣ржг
                  ржХрж░рзБржиред ржЬрзНржЮрж╛ржирж╛рж░рзНржЬржиржХрзЗ ржЗржмрж╛ржжржд рж╣рж┐рж╕рзЗржмрзЗ ржЧржгрзНржп ржХрж░рзЗ ржЖрж░ржУ ржмрзЗрж╢рж┐ ржХрж░рзЗ ржЖрж▓рзНрж▓рж╛рж╣рж░
                  рж╕ржирзНрждрзБрж╖рзНржЯрж┐ ржЕрж░рзНржЬржирзЗрж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред
                </Text>
              </div>
            ) : getScholarshipStatus().prize ? (
              <div className="mb-4 p-3 bg-yellow-50 border-l-4 border-yellow-400">
                <Title
                  level={5}
                  className="tt text-yellow-800"
                  style={{ fontSize: "18px" }}>
                  <span className="text-xl">ЁЯМЯ</span> ржмрж┐рж╢рзЗрж╖ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐рждрзЗ
                  ржирж┐рж░рзНржмрж╛ржЪрж┐ржд
                </Title>
                <Text className="tt block" style={{ fontSize: "16px" }}>
                  <strong>рж╣рж╛ржжрзАрж╕:</strong> "ржХрзЛржи ржорзБрж╕рж▓рж┐ржо ржпржЦржи ржХрзЛржирзЛ ржХрж▓рзНржпрж╛ржгржХрж░ ржХрж╛ржЬрзЗрж░
                  рж╕ржВржХрж▓рзНржк ржХрж░рзЗ, рждржЦржи рждрж╛ рж╕ржорзНржкрж╛ржжржи ржирж╛ ржХрж░рж▓рзЗржУ рждрж╛рж░ ржЬржирзНржп ржПржХржЯрж┐ ржирзЗржХрзА рж▓рзЗржЦрж╛
                  рж╣ржпрж╝ред ржЖрж░ ржпржжрж┐ рждрж╛ рж╕ржорзНржкрж╛ржжржи ржХрж░рзЗ рждржмрзЗ ржжрж╢ ржерзЗржХрзЗ рж╕рж╛рждрж╢ржд ржЧрзБржг ржкрж░рзНржпржирзНржд ржирзЗржХрзА
                  рж▓рзЗржЦрж╛ рж╣ржпрж╝ред" (рж╕рж╣рзАрж╣ ржорзБрж╕рж▓рж┐ржо, рж╣рж╛ржжрзАрж╕: рззрзирзл)
                </Text>
                <Text className="tt block mt-2" style={{ fontSize: "16px" }}>
                  <strong>рж╣рж╛ржжрзАрж╕:</strong> "ржирж┐рж╢рзНржЪржпрж╝ ржЖрж▓рзНрж▓рж╛рж╣ рждрж╛ржЖрж▓рж╛ рждрзЛржорж╛ржжрзЗрж░
                  рж░рзВржк-рж╕рзМржирзНржжрж░рзНржп ржУ рж╕ржорзНржкржж ржжрзЗржЦрзЗржи ржирж╛; ржмрж░ржВ рждрж┐ржирж┐ рждрзЛржорж╛ржжрзЗрж░ ржЕржирзНрждрж░ ржУ ржЖржорж▓
                  ржжрзЗржЦрзЗржиред" (рж╕рж╣рзАрж╣ ржорзБрж╕рж▓рж┐ржо, рж╣рж╛ржжрзАрж╕: рзирзлрзмрзк)
                </Text>
                <Text className="tt block mt-2" style={{ fontSize: "16px" }}>
                  ржЖржкржирж┐ рж╕рзНржХрж▓рж╛рж░рж╢рж┐ржк ржирж╛ ржкрзЗрж▓рзЗржУ ржмрж┐рж╢рзЗрж╖ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐рждрзЗ ржирж┐рж░рзНржмрж╛ржЪрж┐ржд рж╣ржпрж╝рзЗржЫрзЗржиред
                  ржПржЯрж┐ ржЖрж▓рзНрж▓рж╛рж╣рж░ ржкржХрзНрж╖ ржерзЗржХрзЗ ржПржХржЯрж┐ рж╕рзНржмрзАржХрзГрждрж┐ред рж╣рждрж╛рж╢ ржирж╛ рж╣ржпрж╝рзЗ ржЖрж░ржУ ржмрзЗрж╢рж┐
                  ржкрж░рж┐рж╢рзНрж░ржо ржХрж░рзБржиред ржЖрж▓рзНрж▓рж╛рж╣ ржкрж░рж┐рж╢рзНрж░ржоржХрж╛рж░рзАржжрзЗрж░ рж╕ржлрж▓рждрж╛ ржжрж╛ржи ржХрж░рзЗржиред
                </Text>
              </div>
            ) : (
              <div className="mb-4 p-3 bg-blue-50 border-l-4 border-blue-400">
                <Title
                  level={5}
                  className="tt text-blue-800"
                  style={{ fontSize: "18px" }}>
                  <span className="text-xl">ЁЯд▓</span> ржЖрж▓рзНрж▓рж╛рж╣рж░ ржЙржкрж░ ржнрж░рж╕рж╛ рж░рж╛ржЦрзБржи
                </Title>
                <Text className="tt block" style={{ fontSize: "16px" }}>
                  <strong>рж╣рж╛ржжрзАрж╕:</strong> "ржорзБржорж┐ржирзЗрж░ ржмрж┐рж╖ржпрж╝ржЯрж┐ ржЖрж╢рзНржЪрж░рзНржпржЬржиржХ! рждрж╛рж░ рж╕ржХрж▓
                  ржХрж╛ржЬржЗ ржнрж╛рж▓рзЛред ржПржЯрж┐ рж╢рзБржзрзБржорж╛рждрзНрж░ ржорзБржорж┐ржирзЗрж░ ржЬржирзНржпржЗ ржкрзНрж░ржпрзЛржЬрзНржпред ржпржжрж┐ рж╕рзЗ рж╕рзБржЦ
                  ржкрж╛ржпрж╝, рж╕рзЗ рж╢рзБржХрж░рж┐ржпрж╝рж╛ ржЖржжрж╛ржпрж╝ ржХрж░рзЗ, ржЖрж░ рждрж╛ рждрж╛рж░ ржЬржирзНржп ржХрж▓рзНржпрж╛ржгржХрж░ рж╣ржпрж╝ред ржЖрж░
                  ржпржжрж┐ рж╕рзЗ ржХрж╖рзНржЯ ржкрж╛ржпрж╝, рж╕рзЗ ржзрзИрж░рзНржп ржзрж╛рж░ржг ржХрж░рзЗ, ржЖрж░ рж╕рзЗржЯрж╛ржУ рждрж╛рж░ ржЬржирзНржп
                  ржХрж▓рзНржпрж╛ржгржХрж░ рж╣ржпрж╝ред" (рж╕рж╣рзАрж╣ ржорзБрж╕рж▓рж┐ржо, рж╣рж╛ржжрзАрж╕: рзирзпрзпрзп)
                </Text>
                <Text className="tt block mt-2" style={{ fontSize: "16px" }}>
                  <strong>ржХрзБрж░ржЖржирзБрж▓ ржХрж╛рж░рзАржо:</strong> "ржирж┐рж╢рзНржЪржпрж╝ржЗ ржХрж╖рзНржЯрзЗрж░ рж╕рж╛ржерзЗ рж╕рзНржмрж╕рзНрждрж┐
                  ржЖржЫрзЗред ржирж┐рж╢рзНржЪржпрж╝ржЗ ржХрж╖рзНржЯрзЗрж░ рж╕рж╛ржерзЗ рж╕рзНржмрж╕рзНрждрж┐ ржЖржЫрзЗред" (рж╕рзВрж░рж╛ ржЖрж▓-ржЗржирж╢рж┐рж░рж╛рж╣: рзл-рзм)
                </Text>
                <Text className="tt block mt-2" style={{ fontSize: "16px" }}>
                  ржПржЗржмрж╛рж░ ржЖржкржирж┐ рж╢рж┐ржХрзНрж╖рж╛ржмрзГрждрзНрждрж┐ ржкрзЗрждрзЗ ржкрж╛рж░рзЗржиржирж┐, ржХрж┐ржирзНрждрзБ ржЗржирж╢рж╛ржЖрж▓рзНрж▓рж╛рж╣
                  ржнржмрж┐рж╖рзНржпрждрзЗ ржЖрж░ржУ ржнрж╛рж▓рзЛ ржХрж░рж╛рж░ рж╕рзБржпрзЛржЧ ржЖржЫрзЗред ржЖрж▓рзНрж▓рж╛рж╣рж░ ржЙржкрж░ ржнрж░рж╕рж╛ рж░рж╛ржЦрзБржи ржПржмржВ
                  ржирж┐ржпрж╝рждржХрзЗ рж╢рзБржжрзНржз рж░рж╛ржЦрзБржиред ржЬрзНржЮрж╛ржирж╛рж░рзНржЬржи ржХрзЛржирзЛ ржкрзНрж░рждрж┐ржпрзЛржЧрж┐рждрж╛ ржиржпрж╝, ржмрж░ржВ ржПржЯрж┐
                  ржЖрж▓рзНрж▓рж╛рж╣рж░ рж╕ржирзНрждрзБрж╖рзНржЯрж┐ ржЕрж░рзНржЬржирзЗрж░ ржорж╛ржзрзНржпржоред
                </Text>
              </div>
            )}

            {/* Footer */}
            <Divider className="my-3 bg-gray-300" />
            <div className="text-center">
              <Text className="block text-xs mt-1">
                ┬й 2025 Darul Muttakin Foundation
              </Text>
            </div>
          </div>

          <div className="flex justify-center mt-4">
            <Button
              type="default"
              icon={<DownloadOutlined />}
              onClick={downloadResultAsPDF}
              className="border border-gray-400"
              style={{ height: "45px", fontSize: "16px" }}>
              ржлрж▓рж╛ржлрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзБржи
            </Button>
          </div>
        </Card>
      )}
      <Card
        title={
          <span className="tt" style={{ fontSize: "20px" }}>
            рж╢рж┐ржХрзНрж╖рж╛ржмрзГрждрзНрждрж┐ ржкрзНрж░рж╛ржкрзНрждрж┐рж░ ржорж╛ржиржжржгрзНржб
          </span>
        }
        className="mb-6">
        <Table
          columns={[
            {
              title: (
                <span className="tt" style={{ fontSize: "16px" }}>
                  рж╢рзНрж░рзЗржгрзА
                </span>
              ),
              dataIndex: "class",
              key: "class",
              render: (text) => (
                <Text className="tt" style={{ fontSize: "16px" }}>
                  {text}
                </Text>
              ),
            },
            {
              title: (
                <span className="tt" style={{ fontSize: "16px" }}>
                  рж╕рж╛ржзрж╛рж░ржг ржЧрзНрж░рзЗржб
                </span>
              ),
              dataIndex: "general",
              key: "general",
              render: (text) => (
                <Text className="tt" style={{ fontSize: "16px" }}>
                  {text}
                </Text>
              ),
            },
            {
              title: (
                <span className="tt" style={{ fontSize: "16px" }}>
                  ржЯрзНржпрж╛рж▓рзЗржирзНржЯржкрзБрж▓ ржЧрзНрж░рзЗржб
                </span>
              ),
              dataIndex: "talentpool",
              key: "talentpool",
              render: (text) => (
                <Text className="tt" style={{ fontSize: "16px" }}>
                  {text}
                </Text>
              ),
            },
            {
              title: (
                <span className="tt" style={{ fontSize: "16px" }}>
                  ржмрж┐рж╢рзЗрж╖ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐
                </span>
              ),
              dataIndex: "special",
              key: "special",
              render: (text) => (
                <Text className="tt" style={{ fontSize: "16px" }}>
                  {text}
                </Text>
              ),
            },
          ]}
          dataSource={scholarshipCriteria}
          pagination={false}
          size="small"
          bordered
        />
        <Text className="tt block mt-4" style={{ fontSize: "16px" }}>
          <strong>ржирзЛржЯ:</strong> ржЙржкрж░рзЛржХрзНржд ржиржорзНржмрж░ ржкрзНрж░рж╛ржкрзНржд рж╢рж┐ржХрзНрж╖рж╛рж░рзНржерзАрж░рж╛ рж╢рж┐ржХрзНрж╖рж╛ржмрзГрждрзНрждрж┐
          ржкрж╛ржмрзЗржиред ржмрж┐рж╢рзЗрж╖ ржХрзНржпрж╛ржЯрж╛ржЧрж░рж┐ ржкрзНрж░рж╛ржкрзНрждрж░рж╛ рж╕рзНржХрж▓рж╛рж░рж╢рж┐ржк ржкрж╛ржмрзЗржи ржирж╛ ржХрж┐ржирзНрждрзБ рждрж╛ржжрзЗрж░ ржмрж┐рж╢рзЗрж╖
          рж╕рзНржмрзАржХрзГрждрж┐ ржжрзЗржУржпрж╝рж╛ рж╣ржмрзЗред
        </Text>
      </Card>
    </div>
  );
};

export default ResultPage;
